name: Build Android Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.0

      # 3. Install dependencies
      - name: Install dependencies
        run: npm install

      # 4. Build Ionic Angular app
      - name: Build Ionic app
        run: npm run build

      # 5. Sync Capacitor with Android
      - name: Sync Capacitor
        run: npx cap sync android

      # 6. Setup Java
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      # 7. Decode release keystore
      - name: Decode Keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > android/release.keystore

      # 8. Update versionCode and versionName in build.gradle
      - name: Update Version
        run: |
          VERSION=${GITHUB_REF_NAME#v}   # e.g. v1.2.3 -> 1.2.3
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          CODE=$((MAJOR * 10000 + MINOR * 100 + PATCH))
          sed -i "s/versionCode [0-9]\+/versionCode $CODE/" android/app/build.gradle
          sed -i "s/versionName \".*\"/versionName \"$VERSION\"/" android/app/build.gradle
          echo "Using versionCode=$CODE, versionName=$VERSION"

      # 9. Build signed APK
      - name: Build Signed APK
        working-directory: android
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=release.keystore \
            -Pandroid.injected.signing.store.password=${{ secrets.RELEASE_KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.RELEASE_KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.RELEASE_KEY_PASSWORD }}

      # 10. Rename APK with version
      - name: Rename APK
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          mv android/app/build/outputs/apk/release/app-release.apk MyMoodLog-$VERSION.apk

      # 11. Upload APK to GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: MyMoodLog-*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}